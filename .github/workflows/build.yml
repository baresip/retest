name: Build

on:
  push:
    branches:
    - main
    - stable
  pull_request:
    branches:
    - main
    - stable

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        compiler: [gcc, clang]
        os: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
           - os: macos-latest
             compiler: gcc
           - os: windows-latest
             compiler: clang
    env:
      CC: ${{ matrix.compiler }}

    steps:
    - uses: actions/checkout@v2

    - name: openssl path macos
      if: ${{ runner.os == 'macOS' }}
      run: |
        echo "OPENSSL_ROOT_DIR=/usr/local/opt/openssl" >> $GITHUB_ENV

    - name: install packages
      if: ${{ runner.os == 'Windows' }}
      run: |
        choco install --no-progress openssl

    - uses: sreimers/pr-dependency-action@v0.5
      with:
        name: re
        repo: https://github.com/baresip/re
        secret: ${{ secrets.GITHUB_TOKEN }}

    - uses: sreimers/pr-dependency-action@v0.5
      with:
        name: rem
        repo: https://github.com/baresip/rem
        secret: ${{ secrets.GITHUB_TOKEN }}

    - name: make re/rem
      shell: bash
      run: |
        for p in re rem; do
          cmake -S $p -B $p/build
          cmake --build $p/build -j
        done
        for p in re rem; do
          mv $p ../.
        done

    - name: ldconfig
      if: ${{ runner.os == 'Linux' }}
      run: sudo ldconfig

    - name: retest
      if: ${{ runner.os == 'Linux' }}
      run: |
        cmake -DCMAKE_C_FLAGS="-Werror" . && make
        ./retest -r

    - name: retest
      if: ${{ runner.os == 'macOS' }}
      run: |
        OPENSSL_ROOT_DIR=/usr/local/opt/openssl cmake -DCMAKE_C_FLAGS="-Werror" . && make
        ./retest -r

    - name: retest
      if: ${{ runner.os == 'Windows' }}
      run: |
        cmake -B build -DCMAKE_C_FLAGS="/WX"
        cmake --build build
        build\Debug\retest.exe -v -r
